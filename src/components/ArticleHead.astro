---
import { SITE } from '@/consts'
import type { CollectionEntry } from 'astro:content'

interface Props {
  article: CollectionEntry<'articles'>
}

const { article } = Astro.props

const title = article.data.title || SITE.title
const description = article.data.description || SITE.description
const image = new URL('/static/articles/default.png', Astro.site)
---

<title>{`${title} | ${SITE.title}`}</title>
<meta name="title" content={`${title} | ${SITE.title}`} />
<meta name="description" content={description} />
<link rel="canonical" href={SITE.href} />

<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta
  property="og:image"
  content={`${SITE.href}${article?.data?.image?.src}` || image}
/>
<meta property="og:image:alt" content={title} />
<meta property="og:type" content="website" />
<meta property="og:locale" content={SITE.locale} />
<meta property="og:site_name" content={SITE.title} />
<meta property="og:url" content={Astro.url} />

<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta
  property="twitter:image"
  content={`${SITE.href}${article?.data?.image?.src}` || image}
/>
<meta name="twitter:image:alt" content={title} />
<meta name="twitter:card" content="summary_large_image" />

{
  article?.data.tags &&
    article.data.tags.map((tag: string) => {
      return <meta property="article:tag" content={tag} />
    })
}
