---
interface Props {
  type: 'high' | 'wide' | 'square'
}

const { type } = Astro.props
const isProd = import.meta.env.PROD
const adsClientId = 'ca-pub-7261406872445625'
const adsBannerId = type === 'high' ? '6482736387' : type === 'wide' ? '9116800288' : '1210854134'
---

<div class="ads-container text-center">
  <ins class="adsbygoogle" style="display:block" data-ad-client={adsClientId} data-ad-slot={adsBannerId} data-ad-format="auto" data-full-width-responsive="true" />
  {
    isProd ? (
      <script is:inline data-astro-rerun>
        (adsbygoogle = window.adsbygoogle || []).push({});
      </script>
    ) : (
      <script is:inline data-astro-rerun>
        window.adsbygoogle = window.adsbygoogle || [];
        const adBreak = adConfig = function(o) {
          adsbygoogle.push(o);
        }
      </script>
    )
  }
</div>

<script is:inline data-astro-rerun define:vars={{ adsClientId, isProd }}>
  function init() {
    const adElement = document.querySelector('.ads-container');
    const observer = new IntersectionObserver(function (entries) {
      if (entries[0].isIntersecting) {
        let ad = document.createElement('script');
        ad.type = 'text/javascript';
        ad.async = true;
        ad.src =
          'https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=' + adsClientId;
        ad.crossOrigin = 'anonymous';
        if (!isProd) {
          ad.dataset.adbreakTest='on';
        }
        document.head.appendChild(ad);
        observer.disconnect();
      }
    })
    if (adElement) {
      observer.observe(adElement);
    }
  }
  init();
</script>
